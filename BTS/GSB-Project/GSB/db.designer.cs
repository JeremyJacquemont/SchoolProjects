#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34011
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="gsb_frais")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertetat(etat instance);
    partial void Updateetat(etat instance);
    partial void Deleteetat(etat instance);
    partial void Insertfichefrais(fichefrais instance);
    partial void Updatefichefrais(fichefrais instance);
    partial void Deletefichefrais(fichefrais instance);
    partial void Insertfraisforfait(fraisforfait instance);
    partial void Updatefraisforfait(fraisforfait instance);
    partial void Deletefraisforfait(fraisforfait instance);
    partial void Insertlignefraisforfait(lignefraisforfait instance);
    partial void Updatelignefraisforfait(lignefraisforfait instance);
    partial void Deletelignefraisforfait(lignefraisforfait instance);
    partial void Insertlignefraishorsforfait(lignefraishorsforfait instance);
    partial void Updatelignefraishorsforfait(lignefraishorsforfait instance);
    partial void Deletelignefraishorsforfait(lignefraishorsforfait instance);
    partial void Insertvisiteur(visiteur instance);
    partial void Updatevisiteur(visiteur instance);
    partial void Deletevisiteur(visiteur instance);
    #endregion
		
		public dbDataContext() : 
				base(global::GSB.Properties.Settings.Default.gsb_fraisConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<etat> etat
		{
			get
			{
				return this.GetTable<etat>();
			}
		}
		
		public System.Data.Linq.Table<fichefrais> fichefrais
		{
			get
			{
				return this.GetTable<fichefrais>();
			}
		}
		
		public System.Data.Linq.Table<fraisforfait> fraisforfait
		{
			get
			{
				return this.GetTable<fraisforfait>();
			}
		}
		
		public System.Data.Linq.Table<lignefraisforfait> lignefraisforfait
		{
			get
			{
				return this.GetTable<lignefraisforfait>();
			}
		}
		
		public System.Data.Linq.Table<lignefraishorsforfait> lignefraishorsforfait
		{
			get
			{
				return this.GetTable<lignefraishorsforfait>();
			}
		}
		
		public System.Data.Linq.Table<visiteur> visiteur
		{
			get
			{
				return this.GetTable<visiteur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.etat")]
	public partial class etat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _libelle;
		
		private EntitySet<fichefrais> _fichefrais;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public etat()
		{
			this._fichefrais = new EntitySet<fichefrais>(new Action<fichefrais>(this.attach_fichefrais), new Action<fichefrais>(this.detach_fichefrais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(30)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="etat_fichefrais", Storage="_fichefrais", ThisKey="id", OtherKey="idEtat")]
		public EntitySet<fichefrais> fichefrais
		{
			get
			{
				return this._fichefrais;
			}
			set
			{
				this._fichefrais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fichefrais(fichefrais entity)
		{
			this.SendPropertyChanging();
			entity.etat = this;
		}
		
		private void detach_fichefrais(fichefrais entity)
		{
			this.SendPropertyChanging();
			entity.etat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fichefrais")]
	public partial class fichefrais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idVisiteur;
		
		private string _mois;
		
		private System.Nullable<int> _nbJustificatifs;
		
		private System.Nullable<decimal> _montantValide;
		
		private System.Nullable<System.DateTime> _dateModif;
		
		private string _idEtat;
		
		private EntitySet<lignefraisforfait> _lignefraisforfait;
		
		private EntitySet<lignefraishorsforfait> _lignefraishorsforfait;
		
		private EntityRef<etat> _etat;
		
		private EntityRef<visiteur> _visiteur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVisiteurChanging(string value);
    partial void OnidVisiteurChanged();
    partial void OnmoisChanging(string value);
    partial void OnmoisChanged();
    partial void OnnbJustificatifsChanging(System.Nullable<int> value);
    partial void OnnbJustificatifsChanged();
    partial void OnmontantValideChanging(System.Nullable<decimal> value);
    partial void OnmontantValideChanged();
    partial void OndateModifChanging(System.Nullable<System.DateTime> value);
    partial void OndateModifChanged();
    partial void OnidEtatChanging(string value);
    partial void OnidEtatChanged();
    #endregion
		
		public fichefrais()
		{
			this._lignefraisforfait = new EntitySet<lignefraisforfait>(new Action<lignefraisforfait>(this.attach_lignefraisforfait), new Action<lignefraisforfait>(this.detach_lignefraisforfait));
			this._lignefraishorsforfait = new EntitySet<lignefraishorsforfait>(new Action<lignefraishorsforfait>(this.attach_lignefraishorsforfait), new Action<lignefraishorsforfait>(this.detach_lignefraishorsforfait));
			this._etat = default(EntityRef<etat>);
			this._visiteur = default(EntityRef<visiteur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVisiteur", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idVisiteur
		{
			get
			{
				return this._idVisiteur;
			}
			set
			{
				if ((this._idVisiteur != value))
				{
					if (this._visiteur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVisiteurChanging(value);
					this.SendPropertyChanging();
					this._idVisiteur = value;
					this.SendPropertyChanged("idVisiteur");
					this.OnidVisiteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mois", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mois
		{
			get
			{
				return this._mois;
			}
			set
			{
				if ((this._mois != value))
				{
					this.OnmoisChanging(value);
					this.SendPropertyChanging();
					this._mois = value;
					this.SendPropertyChanged("mois");
					this.OnmoisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbJustificatifs", DbType="Int")]
		public System.Nullable<int> nbJustificatifs
		{
			get
			{
				return this._nbJustificatifs;
			}
			set
			{
				if ((this._nbJustificatifs != value))
				{
					this.OnnbJustificatifsChanging(value);
					this.SendPropertyChanging();
					this._nbJustificatifs = value;
					this.SendPropertyChanged("nbJustificatifs");
					this.OnnbJustificatifsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montantValide", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> montantValide
		{
			get
			{
				return this._montantValide;
			}
			set
			{
				if ((this._montantValide != value))
				{
					this.OnmontantValideChanging(value);
					this.SendPropertyChanging();
					this._montantValide = value;
					this.SendPropertyChanged("montantValide");
					this.OnmontantValideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModif", DbType="Date")]
		public System.Nullable<System.DateTime> dateModif
		{
			get
			{
				return this._dateModif;
			}
			set
			{
				if ((this._dateModif != value))
				{
					this.OndateModifChanging(value);
					this.SendPropertyChanging();
					this._dateModif = value;
					this.SendPropertyChanged("dateModif");
					this.OndateModifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEtat", DbType="Char(2)")]
		public string idEtat
		{
			get
			{
				return this._idEtat;
			}
			set
			{
				if ((this._idEtat != value))
				{
					if (this._etat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEtatChanging(value);
					this.SendPropertyChanging();
					this._idEtat = value;
					this.SendPropertyChanged("idEtat");
					this.OnidEtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fichefrais_lignefraisforfait", Storage="_lignefraisforfait", ThisKey="idVisiteur,mois", OtherKey="idVisiteur,mois")]
		public EntitySet<lignefraisforfait> lignefraisforfait
		{
			get
			{
				return this._lignefraisforfait;
			}
			set
			{
				this._lignefraisforfait.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fichefrais_lignefraishorsforfait", Storage="_lignefraishorsforfait", ThisKey="idVisiteur,mois", OtherKey="idVisiteur,mois")]
		public EntitySet<lignefraishorsforfait> lignefraishorsforfait
		{
			get
			{
				return this._lignefraishorsforfait;
			}
			set
			{
				this._lignefraishorsforfait.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="etat_fichefrais", Storage="_etat", ThisKey="idEtat", OtherKey="id", IsForeignKey=true)]
		public etat etat
		{
			get
			{
				return this._etat.Entity;
			}
			set
			{
				etat previousValue = this._etat.Entity;
				if (((previousValue != value) 
							|| (this._etat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._etat.Entity = null;
						previousValue.fichefrais.Remove(this);
					}
					this._etat.Entity = value;
					if ((value != null))
					{
						value.fichefrais.Add(this);
						this._idEtat = value.id;
					}
					else
					{
						this._idEtat = default(string);
					}
					this.SendPropertyChanged("etat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="visiteur_fichefrais", Storage="_visiteur", ThisKey="idVisiteur", OtherKey="id", IsForeignKey=true)]
		public visiteur visiteur
		{
			get
			{
				return this._visiteur.Entity;
			}
			set
			{
				visiteur previousValue = this._visiteur.Entity;
				if (((previousValue != value) 
							|| (this._visiteur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._visiteur.Entity = null;
						previousValue.fichefrais.Remove(this);
					}
					this._visiteur.Entity = value;
					if ((value != null))
					{
						value.fichefrais.Add(this);
						this._idVisiteur = value.id;
					}
					else
					{
						this._idVisiteur = default(string);
					}
					this.SendPropertyChanged("visiteur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_lignefraisforfait(lignefraisforfait entity)
		{
			this.SendPropertyChanging();
			entity.fichefrais = this;
		}
		
		private void detach_lignefraisforfait(lignefraisforfait entity)
		{
			this.SendPropertyChanging();
			entity.fichefrais = null;
		}
		
		private void attach_lignefraishorsforfait(lignefraishorsforfait entity)
		{
			this.SendPropertyChanging();
			entity.fichefrais = this;
		}
		
		private void detach_lignefraishorsforfait(lignefraishorsforfait entity)
		{
			this.SendPropertyChanging();
			entity.fichefrais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fraisforfait")]
	public partial class fraisforfait : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _libelle;
		
		private System.Nullable<decimal> _montant;
		
		private EntitySet<lignefraisforfait> _lignefraisforfait;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    #endregion
		
		public fraisforfait()
		{
			this._lignefraisforfait = new EntitySet<lignefraisforfait>(new Action<lignefraisforfait>(this.attach_lignefraisforfait), new Action<lignefraisforfait>(this.detach_lignefraisforfait));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="Char(20)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fraisforfait_lignefraisforfait", Storage="_lignefraisforfait", ThisKey="id", OtherKey="idFraisForfait")]
		public EntitySet<lignefraisforfait> lignefraisforfait
		{
			get
			{
				return this._lignefraisforfait;
			}
			set
			{
				this._lignefraisforfait.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_lignefraisforfait(lignefraisforfait entity)
		{
			this.SendPropertyChanging();
			entity.fraisforfait = this;
		}
		
		private void detach_lignefraisforfait(lignefraisforfait entity)
		{
			this.SendPropertyChanging();
			entity.fraisforfait = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lignefraisforfait")]
	public partial class lignefraisforfait : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idVisiteur;
		
		private string _mois;
		
		private string _idFraisForfait;
		
		private System.Nullable<int> _quantite;
		
		private EntityRef<fichefrais> _fichefrais;
		
		private EntityRef<fraisforfait> _fraisforfait;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVisiteurChanging(string value);
    partial void OnidVisiteurChanged();
    partial void OnmoisChanging(string value);
    partial void OnmoisChanged();
    partial void OnidFraisForfaitChanging(string value);
    partial void OnidFraisForfaitChanged();
    partial void OnquantiteChanging(System.Nullable<int> value);
    partial void OnquantiteChanged();
    #endregion
		
		public lignefraisforfait()
		{
			this._fichefrais = default(EntityRef<fichefrais>);
			this._fraisforfait = default(EntityRef<fraisforfait>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVisiteur", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idVisiteur
		{
			get
			{
				return this._idVisiteur;
			}
			set
			{
				if ((this._idVisiteur != value))
				{
					if (this._fichefrais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVisiteurChanging(value);
					this.SendPropertyChanging();
					this._idVisiteur = value;
					this.SendPropertyChanged("idVisiteur");
					this.OnidVisiteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mois", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mois
		{
			get
			{
				return this._mois;
			}
			set
			{
				if ((this._mois != value))
				{
					if (this._fichefrais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmoisChanging(value);
					this.SendPropertyChanging();
					this._mois = value;
					this.SendPropertyChanged("mois");
					this.OnmoisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFraisForfait", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idFraisForfait
		{
			get
			{
				return this._idFraisForfait;
			}
			set
			{
				if ((this._idFraisForfait != value))
				{
					if (this._fraisforfait.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFraisForfaitChanging(value);
					this.SendPropertyChanging();
					this._idFraisForfait = value;
					this.SendPropertyChanged("idFraisForfait");
					this.OnidFraisForfaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantite", DbType="Int")]
		public System.Nullable<int> quantite
		{
			get
			{
				return this._quantite;
			}
			set
			{
				if ((this._quantite != value))
				{
					this.OnquantiteChanging(value);
					this.SendPropertyChanging();
					this._quantite = value;
					this.SendPropertyChanged("quantite");
					this.OnquantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fichefrais_lignefraisforfait", Storage="_fichefrais", ThisKey="idVisiteur,mois", OtherKey="idVisiteur,mois", IsForeignKey=true)]
		public fichefrais fichefrais
		{
			get
			{
				return this._fichefrais.Entity;
			}
			set
			{
				fichefrais previousValue = this._fichefrais.Entity;
				if (((previousValue != value) 
							|| (this._fichefrais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fichefrais.Entity = null;
						previousValue.lignefraisforfait.Remove(this);
					}
					this._fichefrais.Entity = value;
					if ((value != null))
					{
						value.lignefraisforfait.Add(this);
						this._idVisiteur = value.idVisiteur;
						this._mois = value.mois;
					}
					else
					{
						this._idVisiteur = default(string);
						this._mois = default(string);
					}
					this.SendPropertyChanged("fichefrais");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fraisforfait_lignefraisforfait", Storage="_fraisforfait", ThisKey="idFraisForfait", OtherKey="id", IsForeignKey=true)]
		public fraisforfait fraisforfait
		{
			get
			{
				return this._fraisforfait.Entity;
			}
			set
			{
				fraisforfait previousValue = this._fraisforfait.Entity;
				if (((previousValue != value) 
							|| (this._fraisforfait.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fraisforfait.Entity = null;
						previousValue.lignefraisforfait.Remove(this);
					}
					this._fraisforfait.Entity = value;
					if ((value != null))
					{
						value.lignefraisforfait.Add(this);
						this._idFraisForfait = value.id;
					}
					else
					{
						this._idFraisForfait = default(string);
					}
					this.SendPropertyChanged("fraisforfait");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lignefraishorsforfait")]
	public partial class lignefraishorsforfait : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idVisiteur;
		
		private string _mois;
		
		private string _libelle;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<decimal> _montant;
		
		private EntityRef<fichefrais> _fichefrais;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidVisiteurChanging(string value);
    partial void OnidVisiteurChanged();
    partial void OnmoisChanging(string value);
    partial void OnmoisChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    #endregion
		
		public lignefraishorsforfait()
		{
			this._fichefrais = default(EntityRef<fichefrais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVisiteur", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string idVisiteur
		{
			get
			{
				return this._idVisiteur;
			}
			set
			{
				if ((this._idVisiteur != value))
				{
					if (this._fichefrais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVisiteurChanging(value);
					this.SendPropertyChanging();
					this._idVisiteur = value;
					this.SendPropertyChanged("idVisiteur");
					this.OnidVisiteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mois", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string mois
		{
			get
			{
				return this._mois;
			}
			set
			{
				if ((this._mois != value))
				{
					if (this._fichefrais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmoisChanging(value);
					this.SendPropertyChanging();
					this._mois = value;
					this.SendPropertyChanged("mois");
					this.OnmoisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(100)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fichefrais_lignefraishorsforfait", Storage="_fichefrais", ThisKey="idVisiteur,mois", OtherKey="idVisiteur,mois", IsForeignKey=true)]
		public fichefrais fichefrais
		{
			get
			{
				return this._fichefrais.Entity;
			}
			set
			{
				fichefrais previousValue = this._fichefrais.Entity;
				if (((previousValue != value) 
							|| (this._fichefrais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fichefrais.Entity = null;
						previousValue.lignefraishorsforfait.Remove(this);
					}
					this._fichefrais.Entity = value;
					if ((value != null))
					{
						value.lignefraishorsforfait.Add(this);
						this._idVisiteur = value.idVisiteur;
						this._mois = value.mois;
					}
					else
					{
						this._idVisiteur = default(string);
						this._mois = default(string);
					}
					this.SendPropertyChanged("fichefrais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.visiteur")]
	public partial class visiteur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _login;
		
		private string _mdp;
		
		private string _adresse;
		
		private string _cp;
		
		private string _ville;
		
		private System.Nullable<System.DateTime> _dateEmbauche;
		
		private int _isComptable;
		
		private EntitySet<fichefrais> _fichefrais;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OncpChanging(string value);
    partial void OncpChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OndateEmbaucheChanging(System.Nullable<System.DateTime> value);
    partial void OndateEmbaucheChanged();
    partial void OnisComptableChanging(int value);
    partial void OnisComptableChanged();
    #endregion
		
		public visiteur()
		{
			this._fichefrais = new EntitySet<fichefrais>(new Action<fichefrais>(this.attach_fichefrais), new Action<fichefrais>(this.detach_fichefrais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="Char(30)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="Char(30)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="Char(20)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="Char(20)")]
		public string mdp
		{
			get
			{
				return this._mdp;
			}
			set
			{
				if ((this._mdp != value))
				{
					this.OnmdpChanging(value);
					this.SendPropertyChanging();
					this._mdp = value;
					this.SendPropertyChanged("mdp");
					this.OnmdpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="Char(30)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp", DbType="Char(5)")]
		public string cp
		{
			get
			{
				return this._cp;
			}
			set
			{
				if ((this._cp != value))
				{
					this.OncpChanging(value);
					this.SendPropertyChanging();
					this._cp = value;
					this.SendPropertyChanged("cp");
					this.OncpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="Char(30)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEmbauche", DbType="Date")]
		public System.Nullable<System.DateTime> dateEmbauche
		{
			get
			{
				return this._dateEmbauche;
			}
			set
			{
				if ((this._dateEmbauche != value))
				{
					this.OndateEmbaucheChanging(value);
					this.SendPropertyChanging();
					this._dateEmbauche = value;
					this.SendPropertyChanged("dateEmbauche");
					this.OndateEmbaucheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isComptable", DbType="Int NOT NULL")]
		public int isComptable
		{
			get
			{
				return this._isComptable;
			}
			set
			{
				if ((this._isComptable != value))
				{
					this.OnisComptableChanging(value);
					this.SendPropertyChanging();
					this._isComptable = value;
					this.SendPropertyChanged("isComptable");
					this.OnisComptableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="visiteur_fichefrais", Storage="_fichefrais", ThisKey="id", OtherKey="idVisiteur")]
		public EntitySet<fichefrais> fichefrais
		{
			get
			{
				return this._fichefrais;
			}
			set
			{
				this._fichefrais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fichefrais(fichefrais entity)
		{
			this.SendPropertyChanging();
			entity.visiteur = this;
		}
		
		private void detach_fichefrais(fichefrais entity)
		{
			this.SendPropertyChanging();
			entity.visiteur = null;
		}
	}
}
#pragma warning restore 1591
